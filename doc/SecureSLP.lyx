#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass scrartcl
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Secure SLP
\begin_inset CommandInset label
LatexCommand label
name "sec:Secure-SLP"

\end_inset


\end_layout

\begin_layout Standard
Having identified confidentiality and authorization (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Confidentiality-and-Authorization"

\end_inset

) as essential security features in MANETs 
\begin_inset CommandInset citation
LatexCommand cite
key "Cotroneo2004"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Hollick2001"

\end_inset

, this paper will outline ways to secure SLP.
 These protocol extensions are to be backward compatible and secured agents
 are to be deployable in existing networks incrementally.
\end_layout

\begin_layout Subsection
Web of Trust or Public Key Infrastructure and reputation-based trust
\begin_inset Note Note
status collapsed

\begin_layout Itemize
well known
\end_layout

\begin_layout Itemize
only works when CA is reachable, thus web of trust as fall back?
\end_layout

\begin_deeper
\begin_layout Itemize
Self signed if no CA in reach, better use web of trust
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Before we can start implementing confidentiality, we need to focus on the
 trust relationships in SLP first.
 As shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Authentication-and-Integrity"

\end_inset

, SLP only supports pre-established asymmetric keys as means to trust.
 While this rather simplistic approach is acceptable in centrally managed
 networks like enterprise LANs, it is not for MANETs.
 A MANET qualifies itself as a network of nomadic devices without prior
 knowledge of each other.
 Thus mechanisms are needed that can establish trust between strangers.
\begin_inset Newline newline
\end_inset

Since SLP already comes with support for X.509 certificates, it appears to
 be easiest to base trust on such keys and just eliminate the need to manually
 set them up keys and implement proper key distribution protocols instead.
\begin_inset Newline newline
\end_inset

This problem has been solved by at least two well know solutions:
\end_layout

\begin_layout Description
Web
\begin_inset space ~
\end_inset

of
\begin_inset space ~
\end_inset

Trust
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 A web of trust, Non-repudiation, No immediate revocation
\end_layout

\end_inset


\end_layout

\begin_layout Description
Public
\begin_inset space ~
\end_inset

Key
\begin_inset space ~
\end_inset

Infrastructure
\end_layout

\begin_layout Standard
Both technologies solve the key distribution protocol successfully.
 However each has its own shortcoming in MANETs.
\begin_inset Newline newline
\end_inset

To balance off said shortcomings a reputation-based trust model may be used
 on top of static key-based trust models.
 Reputation-based trust takes the behavior of an agent
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
E.g.
 amount of network messages sent
\end_layout

\end_inset

 over time into account.
 It then uses its behavior as input parameters for a continuous function
 that marks trustworthiness, indifference or mistrust of the agent.
 The key-based model is used to bootstrap the reputation-based model by
 means of recommendation.
 A details definition of a reputation-based trust model can be found in
 Secure Pervasive Discovery Protocol (SPDP) 
\begin_inset CommandInset citation
LatexCommand cite
key "Almenarez2003"

\end_inset

.
\end_layout

\begin_layout Subsection
Confidentiality via Security Groups
\begin_inset CommandInset label
LatexCommand label
name "sub:Confidentiality-via-Security"

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Itemize
All messages between UA and SA are to be encrypted in a security group by
 traditional encryption mechanisms
\end_layout

\begin_layout Itemize
Security Group (SG)
\end_layout

\begin_deeper
\begin_layout Itemize
Based on pre-established trust groups 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Authentication-and-Integrity"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Shared secret not necessarily based on public keys used for authentication
\end_layout

\end_deeper
\begin_layout Itemize
All members of a security group share a common secret (symmetric encryption)
\end_layout

\begin_deeper
\begin_layout Itemize
man in the middle attacks?!
\end_layout

\end_deeper
\begin_layout Itemize
IPSec for pair-wise secure communication, Secure multicast for group communicati
on?
\end_layout

\end_deeper
\begin_layout Itemize
Joining a SG is a two stage process, where a group members must authenticate
 and authorize a peer first and provide the shared secret
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Once a usable and reliable trust mechanism has been established we can use
 it to create security groups (SGs) among agents.
 SGs have been proposed by 
\begin_inset CommandInset citation
LatexCommand cite
key "Hollick2001"

\end_inset

.
 A SG is a group of agents which share a common secret (symmetric key).
 This key is used to encrypt all their communication between each other.
 Due to the fact that the same two peers might be part of different SGs,
 the key association cannot be based on the sender address
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Unless each SG uses a unique multicast group and or port range
\end_layout

\end_inset

.
 Therefore complete encryption of the SLP message payload would not only
 cause severe performance penalties for non SG members, but force group
 members to try all associated keys in worst case.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Hollick2001"

\end_inset

 suggests to revert to Internet layer encryption with Internet Protocol
 Security (IPSec)
\begin_inset CommandInset citation
LatexCommand cite
key "Kent2005"

\end_inset

 for peer communication and leaves securing multicast communication open.
 However, this paper takes a different approach and uses application layer
 encryption with Transport Layer Security (TLS)
\begin_inset CommandInset citation
LatexCommand cite
key "Dierks2008"

\end_inset

 and Datagram Transport Layer Security (DTLS)
\begin_inset CommandInset citation
LatexCommand cite
key "Phelan2008"

\end_inset

 for UDP to support both unicast as well as multicast communication at once.
\begin_inset Newline newline
\end_inset

An agent has to be trusted by a member of the security group to join it.
 Optionally authorization can be enforced during group joining.
 SGs can be created by all agent types
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
We will later show that DAs may optionally be part of security groups
\end_layout

\end_inset

, though since advertising a SG has to be made with traditional SLP, an
 initiator of a SG always needs to assume the role of an SA anyway.
\end_layout

\begin_layout Subsection
Security Groups and and Directory Agents
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Excludes DA entirely, but does not show a way to technically disable DAs,
 though the protocol will always fall back to DA mode.
 But is a DA even harmful in the outlined SLP extension?
\end_layout

\begin_layout Itemize
I won't be able to cache confidential service registrations as it cannot
 read them
\end_layout

\begin_deeper
\begin_layout Itemize
I can prevent SAs and UAs from forming a security group by holding back
 plain service announcements used to establish SGs.
\end_layout

\begin_deeper
\begin_layout Itemize
This built-in fallback to infrastructure mode can be seen as a potential
 security threat.
 An attacker might simply assume the role of the DA and learn about all
 existing services.
\end_layout

\end_deeper
\end_deeper
\end_inset


\end_layout

\begin_layout Standard
TBD
\end_layout

\end_body
\end_document
